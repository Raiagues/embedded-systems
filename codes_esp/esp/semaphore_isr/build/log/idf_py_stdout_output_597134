[1/10] Performing build step for 'bootloader'
[1/1] cd /home/rodriger/Documents/embedded-systems/codes_esp/esp/semaphore_isr/build/bootloader/esp-idf/esptool_py && /home/rodriger/.espressif/python_env/idf5.4_py3.12_env/bin/python /home/rodriger/Documents/embedded-systems/codes_esp/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 /home/rodriger/Documents/embedded-systems/codes_esp/esp/semaphore_isr/build/bootloader/bootloader.bin
Bootloader binary size 0x6580 bytes. 0xa80 bytes (9%) free.
[2/10] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/semaphore_isr.c.obj
[3/10] No install step for 'bootloader'
[4/10] Linking C static library esp-idf/main/libmain.a
[5/10] Completed 'bootloader'
[6/10] Generating ld/sections.ld
[7/10] Linking CXX executable semaphore_isr.elf
[8/10] Generating binary image from built executable
esptool.py v4.8.1
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated /home/rodriger/Documents/embedded-systems/codes_esp/esp/semaphore_isr/build/semaphore_isr.bin
[9/10] cd /home/rodriger/Documents/embedded-systems/codes_esp/esp/semaphore_isr/build/esp-idf/esptool_py && /home/rodriger/.espressif/python_env/idf5.4_py3.12_env/bin/python /home/rodriger/Documents/embedded-systems/codes_esp/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /home/rodriger/Documents/embedded-systems/codes_esp/esp/semaphore_isr/build/partition_table/partition-table.bin /home/rodriger/Documents/embedded-systems/codes_esp/esp/semaphore_isr/build/semaphore_isr.bin
semaphore_isr.bin binary size 0x2d700 bytes. Smallest app partition is 0x100000 bytes. 0xd2900 bytes (82%) free.
[9/10] cd /home/rodriger/Documents/embedded-systems/codes_esp/esp/esp-idf/components/esptool_py && /usr/bin/cmake -D IDF_PATH=/home/rodriger/Documents/embedded-systems/codes_esp/esp/esp-idf -D "SERIAL_TOOL=/home/rodriger/.espressif/python_env/idf5.4_py3.12_env/bin/python;;/home/rodriger/Documents/embedded-systems/codes_esp/esp/esp-idf/components/esptool_py/esptool/esptool.py;--chip;esp32" -D "SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args" -D WORKING_DIRECTORY=/home/rodriger/Documents/embedded-systems/codes_esp/esp/semaphore_isr/build -P /home/rodriger/Documents/embedded-systems/codes_esp/esp/esp-idf/components/esptool_py/run_serial_tool.cmake
esptool.py --chip esp32 -p /dev/ttyUSB0 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 40m --flash_size 2MB 0x1000 bootloader/bootloader.bin 0x10000 semaphore_isr.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.8.1
Serial port /dev/ttyUSB0
Connecting....
Chip is ESP32-D0WD-V3 (revision v3.0)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme None
Crystal is 40MHz
MAC: b4:8a:0a:86:b5:a4
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00001000 to 0x00007fff...
Flash will be erased from 0x00010000 to 0x0003dfff...
Flash will be erased from 0x00008000 to 0x00008fff...
SHA digest in image updated
Compressed 25984 bytes to 16377...
Writing at 0x00001000... (100 %)
Wrote 25984 bytes (16377 compressed) at 0x00001000 in 0.9 seconds (effective 241.2 kbit/s)...
Hash of data verified.
Compressed 186112 bytes to 100500...
Writing at 0x00010000... (14 %)
Writing at 0x0001c982... (28 %)
Writing at 0x000223b6... (42 %)
Writing at 0x00028468... (57 %)
Writing at 0x0002f98c... (71 %)
Writing at 0x00036576... (85 %)
Writing at 0x0003c7cd... (100 %)
Wrote 186112 bytes (100500 compressed) at 0x00010000 in 3.0 seconds (effective 500.9 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 103...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (103 compressed) at 0x00008000 in 0.1 seconds (effective 415.9 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
